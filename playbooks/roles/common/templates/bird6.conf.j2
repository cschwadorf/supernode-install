# Configure logging
#log syslog { debug, trace, info, remote, warning, error, auth, fatal, bug };
#log stderr all;
#log "tmp" all;
#log syslog all;

#debug protocols all;

## router id IPv4 address ;
##
## Set BIRD's router ID. It's a world-wide unique identification 
## of your router, usually one of router's IPv4 addresses. Default: the lowest IPv4 address of a non-loopback interface. 
##

router id {{ ansible_default_ipv4.address }} ;

protocol direct {
        interface "bat0", "gre-*", "lo";  # Restrict network interfaces it works with

}


protocol kernel {
        device routes;
        import all;
        export all;             # Default is export none
        kernel table 42;                # Kernel table to synchronize with (default: main)
}

protocol device {
        scan time 10;           # Scan interfaces every 10 seconds
}

function is_default() {
        return (net ~ [::/0]);
}

## own networks 
## angepass voreifel

function is_self_net() {
return net ~ [ fda4:1721:8451:1::/64+ ];
}

# freifunk ip ranges in general
function is_freifunk() {
return net ~ [ fc00::/7{48,64},
2001:bf7::/32+];
}

filter hostroute {
        if net ~ 2a03:2260:121:4000::/52 then accept;
        reject;
}



# Uplink zum FF Rheinland

template bgp uplink {

## local [ip] [port number] [as number] ;

## Define which AS we are part of. 
## Optional ip argument specifies a source address, 
## equivalent to the source address option (see below). 
## Optional port argument specifies the local BGP port instead of standard port 179. 
## The parameter may be used multiple times with different sub-options 
## (e.g., both local 10.0.0.1 as 65000; and local 10.0.0.1; 
## local as 65000; are valid). This parameter is mandatory. 

        local as {{ sn_asn }};
        import where is_default();
        export filter hostroute;
        gateway recursive;
}


protocol bgp ffrl_bb_a_ak_ber from uplink {
        source address 2a03:2260:0:306::2;
        neighbor 2a03:2260:0:306::1 as 201701;
}

protocol bgp ffrl_bb_b_ak_ber from uplink {
        source address 2a03:2260:0:309::2;
        neighbor 2a03:2260:0:309::1 as 201701;
}


protocol bgp ffrl_bb_a_ix_dus from uplink {
        source address 2a03:2260:0:308::2;
        neighbor 2a03:2260:0:308::1 as 201701;
}

protocol bgp ffrl_bb_b_ix_dus from uplink {
        source address 2a03:2260:0:30b::2;
        neighbor 2a03:2260:0:30b::1 as 201701;
}

protocol bgp ffrl_bb_a_fra3_fra from uplink {
        source address 2a03:2260:0:307::2;
        neighbor 2a03:2260:0:307::1 as 201701;
}

protocol bgp ffrl_bb_b_fra3_fra from uplink {
        source address 2a03:2260:0:30a::2;
        neighbor 2a03:2260:0:30a::1 as 201701;
}

