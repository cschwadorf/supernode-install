---
# file: playbooks/roles/gateways/tasks/tsk_tunneldigger.yaml
#
# Thomas Arend
# Date 2019-04-13
#
#

# Stop the running tunneldigger before installing a new one
# Be aware we are stopping only hoods, which we have in the Ansible

- name: stop service tunneldigger
  service:
    name: "tunneldigger@{{ hoods[item].namespace }}.service"
    state: stopped
  ignore_errors: true
  loop: "{{ hoods | list }}"
  tags: 
    - tunneldigger

# Install and configure tunneldigger

- name: delete /srv/tunneldigger 
  file:
    path: "/{{ item }}/tunneldigger"
    state: absent
    mode: '0755'
  loop:
    - srv

- name: create tunneldigger directories if they do not exist
  file:
    path: "/{{ item }}/tunneldigger"
    state: directory
    mode: '0755'
  loop:
    - etc
    - srv


# Get tunneldigger from github

- name: get tunneldigger from git
  git: 
    repo: https://github.com/wlanslovenija/tunneldigger.git
    dest: /srv/tunneldigger/tunneldigger
    version: legacy
  register: tunneldigger
  tags: 
    - tunneldigger

# Install tunneldigger

- name: configure tunneldigger
  raw: "cd /srv/tunneldigger; virtualenv -p /usr/bin/python3 env_tunneldigger; source env_tunneldigger/bin/activate; cd tunneldigger/broker ; python setup.py install"
  ignore_errors: true
  tags:
    - tunneldigger

- name: copy l2tp broker config template
  template: 
    src: "l2tp_broker.cfg.j2"
    dest: "/etc/tunneldigger/hood-{{ hoods[item].namespace }}.cfg"
    owner: root
    group: root
    mode: 0444
  loop: "{{ hoods | list }}"
  tags: 
    - tunneldigger

- name: copy tunneldigger session-up to add new tunnel to mesh-bat<n> device
  template: 
    src: "session-up.sh.j2"
    dest: /etc/tunneldigger/session-up-{{ hoods[item].namespace }}.sh
    owner: root 
    group: root
    mode: 0500
  loop: "{{ hoods | list }}"
  tags: 
    - tunneldigger
    
- name: copy tunneldigger session-down scripts to delete tunnel from mesh-bat<n>
  template: 
    src: "session-pre-down.sh.j2"
    dest: /etc/tunneldigger/session-pre-down-{{ hoods[item].namespace }}.sh
    owner: root 
    group: root
    mode: 0500
  loop: "{{ hoods | list }}"
  tags: 
    - tunneldigger

- name: Copy tunneldigger service template
  template: 
    src: "tunneldigger.service.j2"
    dest: "/etc/systemd/system/tunneldigger@.service"
    owner: root
    group: root
    mode: 0444
  tags: 
    - tunneldigger
  loop: "{{ hoods | list }}"

- name: Tunneldigger reload
  command: systemctl daemon-reload
  tags: 
    - tunneldigger

- name: Enable and restart service tunneldigger
  service:
    name: "tunneldigger@{{ hoods[item].namespace }}.service"
    enabled: yes
    state: restarted
  loop: "{{ hoods | list }}"
  tags: 
    - tunneldigger
...
